{"ast":null,"code":"var _jsxFileName = \"/home/beatrice-wacera-kibucha/documents/Moringa-Projects/bot-battlr/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport BotCollection from \"./components/BotCollection\";\nimport YourBotArmy from \"./components/YourBotArmy\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [army, setArmy] = useState([]);\n  const [loading, setLoading] = useState(true); // Loading state\n\n  // Fetch bots from JSON Server\n  useEffect(() => {\n    fetch(\"http://localhost:8001/bots\").then(res => {\n      if (!res.ok) throw new Error(\"Network response was not ok\");\n      return res.json();\n    }).then(data => {\n      // Ensure we always get an array\n      setBots(Array.isArray(data) ? data : []);\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"Error fetching bots:\", err);\n      setLoading(false);\n    });\n  }, []);\n\n  // Add bot to army (only once)\n  const addToArmy = bot => {\n    if (!army.find(member => member.id === bot.id)) {\n      setArmy([...army, bot]);\n    }\n  };\n\n  // Release bot from army\n  const releaseBot = bot => {\n    setArmy(army.filter(member => member.id !== bot.id));\n  };\n\n  // Delete bot completely\n  const dischargeBot = bot => {\n    fetch(`http://localhost:8001/bots/${bot.id}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      setArmy(army.filter(member => member.id !== bot.id));\n      setBots(bots.filter(b => b.id !== bot.id));\n    }).catch(err => console.error(\"Error deleting bot:\", err));\n  };\n\n  // Show loading message if bots are not fetched yet\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading bots...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u2694\\uFE0F Bot Battlr \\u2694\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n      army: army,\n      releaseBot: releaseBot,\n      dischargeBot: dischargeBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      addToArmy: addToArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xWTn3iAP48/M7NiRe/SQXyAahPo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BotCollection","YourBotArmy","jsxDEV","_jsxDEV","App","_s","bots","setBots","army","setArmy","loading","setLoading","fetch","then","res","ok","Error","json","data","Array","isArray","catch","err","console","error","addToArmy","bot","find","member","id","releaseBot","filter","dischargeBot","method","b","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/beatrice-wacera-kibucha/documents/Moringa-Projects/bot-battlr/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport BotCollection from \"./components/BotCollection\";\nimport YourBotArmy from \"./components/YourBotArmy\";\n\nfunction App() {\n  const [bots, setBots] = useState([]);\n  const [army, setArmy] = useState([]);\n  const [loading, setLoading] = useState(true); // Loading state\n\n  // Fetch bots from JSON Server\n  useEffect(() => {\n    fetch(\"http://localhost:8001/bots\")\n      .then((res) => {\n        if (!res.ok) throw new Error(\"Network response was not ok\");\n        return res.json();\n      })\n      .then((data) => {\n        // Ensure we always get an array\n        setBots(Array.isArray(data) ? data : []);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(\"Error fetching bots:\", err);\n        setLoading(false);\n      });\n  }, []);\n\n  // Add bot to army (only once)\n  const addToArmy = (bot) => {\n    if (!army.find((member) => member.id === bot.id)) {\n      setArmy([...army, bot]);\n    }\n  };\n\n  // Release bot from army\n  const releaseBot = (bot) => {\n    setArmy(army.filter((member) => member.id !== bot.id));\n  };\n\n  // Delete bot completely\n  const dischargeBot = (bot) => {\n    fetch(`http://localhost:8001/bots/${bot.id}`, {\n      method: \"DELETE\",\n    })\n      .then(() => {\n        setArmy(army.filter((member) => member.id !== bot.id));\n        setBots(bots.filter((b) => b.id !== bot.id));\n      })\n      .catch((err) => console.error(\"Error deleting bot:\", err));\n  };\n\n  // Show loading message if bots are not fetched yet\n  if (loading) {\n    return <h2>Loading bots...</h2>;\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>⚔️ Bot Battlr ⚔️</h1>\n      <YourBotArmy\n        army={army}\n        releaseBot={releaseBot}\n        dischargeBot={dischargeBot}\n      />\n      <BotCollection bots={bots} addToArmy={addToArmy} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}